import defaultLang from './lang';

let _defaultLang = angular.copy(defaultLang);

export default Object.assign(_defaultLang, {
  Install: '安装',
  Install_Description: '介绍如何搭建环境及快速上手。',
  Generate: '项目生成',
  Install_Generator: '安装生成器',
  Generate_Init: '使用ng-start-cli初始化，根据提示输入项目名称 ',
  Generate_Start: '切换至新建项目目录，输入gulp 运行项目。',
  GenerateStartDesc: '打开控制台提示信息的Url: http://localhost:3000/#/start (在ng-start-cli里默认添加 start 路由)',
  Install_FancyUI: '安装 fancyui',
  Inject_Module: '注入模块',
  Example: '示例',
  Basic_Usage: '基础用法',
  Tutorial: '开发指南',
  Basic: '基础',
  Layout: '布局',
  Navigation: '导航',
  Data: '数据',
  Chat: '可视化',
  Effect: '效果',
  Badage_Description: '图标右上角的圆形徽标数字。',
  Badage_Description1: '一般出现在通知图标或头像的右上角，用于显示需要处理的消息条数，通过醒目视觉形式吸引用户处理。',
  MaxValue: '最大值',
  Message: '消息',
  Options: '配置项',
  Param: '参数',
  Description: '描述',
  Type: '类型',
  Optional: '可选值',
  DefaultValue: '默认值',
  Count_Description: '显示值, 为 0 时隐藏',
  Max_Description: '最大值，超过最大值会显示 max+',
  Dot_Description: '展示为小圆点',
  Project_file: '通过ng-start-cli生成的项目文件结构',
  GenerateModule: '生成组件',
  GenerateModuleDescription: '增加一个页面模块, 执行 gulp component 命令。',
  ParamName: '--name：确定没有重名的模块，会覆盖已有同名模块，大小写不敏感。',
  ParamParent: '--parent：可以通过该参数来改变生成的目录，基准目录是 client/app/components/。',
  Create: '创建',
  CreateDetail: '创建好的模板目录如下：',
  RouterSetting: '路由配置',
  RouterFile: "配置地址",
  RouterDesc: '统一配置，支持埋点，code splitting 等.',
  ProxySetting: '代理配置',
  ProxySettingDes: '为了方便本地调试和解决跨域问题, 在执行 gulp 启动调试时, 会启动代理服务器, 转发是可配置的, 见custom.env.config.js。',
  ApiFilter: '配置第一级目录，代表该目录要走代理。',
  TargetDomain: '目标API的host地址, 在调用后端接口时, 用的是相对路径, 接口路径是本地域名, 如: http://localhost:3000, 此项配置将localhost转发到targetDomain配置的域名(后端接口的域名), 并将cookie带过去.',
  Cookie: '那些需要识别用户的Api，往往通过cookie来识别，在这里设置cookie',
  Pack: '打包',
  PackDes: '运行gulp webpack命令, 将项目打包到custom.env.config.js中配置的distPath。',
  ButtonDes: '常用的操作按钮',
  Styles: '风格',
  Size: '尺寸',
  Icon: '带Icon的按钮',
  IconDes: 'icon属性的值与bootstrap的glyphicon名称相同',
  Disable: '禁用状态',
  IconDes1: '包括200个来自 Glyphicon Halflings 的字体图标。',
  GridLayout: '栅格布局',
  StepsDes: '引导用户按照流程完成任务的分步导航条。',
  TableDes: '用于展示多条结构类似的数据，可对数据进行排序、筛选、对比或其他自定义操作。',
  CustomTableDes: '可以自定义选择要显示的列。',
  IsCustomTable: '是否自定义表格',
  Operations: '每条数据的操作配置, 回调函数:action, 回调参数:当前行数据',
  TableData: '表格数据(接口返回的数据)',
  Event: '事件',
  EventName: '事件名称',
  TableEventDesc: '翻页后触发',
  TableEventParams: '翻页后的页码',
  FormDes: '由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据。',
  PanelDes: '通用卡片容器',
  SwitchDes: '表示两种相互对立的状态间的切换，多用于触发「开/关」。',
  SwitchWorld: '带文字',
  SwitchEventDes: '开关状态发生变化时的回调函数',
  SwitchEventParam: '新状态的布尔值',
  ProgressDes: '用于展示操作进度，告知用户当前状态和预期。',
  ProgressLinear: '线形进度条',
  ProgressCircular: '环形进度条',
  ProgressType: '进度条类型',
  ProgressPercent: '百分比（必填）',
  ProgerssState: '进度条当前状态',
  ProgressWidth: '进度条的宽度，单位 px(必填)',
  ProgressCircularWidth: '环形进度条画布宽度（只在 type=circle 时可用）',
  InputDes: '通过鼠标或键盘，输入范围内的数值。',
  StepSetting: '设置步数',
  CurrentValue: '当前值',
  Disabled: '是否禁用',
  RateDes: '评分组件',
  WithColor: '区分颜色',
  WithText: '辅助文字',
  RateCount: '评分总值',
  RateColors: 'icon 的颜色数组，共有 3 个元素，为 3 个分段所对应的颜色',
  LowThreshold: '低分和中等分数的界限值，值本身被划分在低分中。',
  HightThreshold: '高分和中等分数的界限值，值本身被划分在高分中',
  TextArray: '文字数组',
  DefaultCalendar: '默认时间窗',
  RangeCalendar: '范围时间窗',
  RangeCalendarDes: '会自动限制前者时间不能大于后者时间,后者时间不能小于前者时间',
  CalendarTypeDesc: '单个时间组件还是时间范围组件',
  SliderInputDesc: '滑动型输入器，展示当前值和可选范围。',
  PopConfirmDesc: '目标元素的操作需要用户进一步的确认时，在目标元素附近弹出浮层提示，交互形式更轻量。',
  PopConfirmUse: '此方法会返回Promise, 其中resolve表明用户点击了确认按钮; reject表明用户点击了取消按钮;',
  HintDesc: '悬浮出现在页面右上角，显示全局的通知提醒消息。',
  Component: '组件文档',
  menu: '导航菜单',
  MenuDesc: '为页面和功能提供导航的菜单列表',
  MenuApiDecTheme: '主题颜色',
  MenuApiDecMode: '菜单类型，现在支持垂直、水平、和内嵌模式三种',
  MenuApiDecDefaultSelectedKeys: '初始选中的菜单项 key 数组',
  MenuApiDecDefaultOpenKeys: '初始选中的菜单项 key 数组',
  MenuApiDisabled: '是否禁用',
  MenuApiDecKey: '唯一标志',
  MenuApiDecSubMenuTitle: '子菜单项值',
  MenuApiDecItemGroupTitle: '分组标题',
  MenuApiDecOnSelect: '被选中时调',
  Upload: '上传',
  UploadDesc: '文件选择上传和拖拽上传控件',
  UploadApiDecName: '发到后台的文件参数名',
  UploadApiDecDefaultFileList: '默认已经上传的文件列表',
  UploadApiDecFileList: '已经上传的文件列表',
  UploadApiDecAction: '必选参数, 上传的地址',
  UploadApiDecData: '上传所需参数或返回上传参数的方法',
  UploadApiDecHeaders: '设置上传的请求头部，IE10 以上有效',
  UploadApiDecMultiple: '是否支持多选文件，ie10+ 支持。开启后按住 ctrl 可选择多个文件。',
  UploadApiDecAccept: '接受上传的文件类型/大小/宽高',
  UploadApiDecBeforeUpload: '上传文件之前的钩子，参数为上传的文件，若返回 false 或者 Promise 则停止上传。',
  UploadApiDecCustomRequest: '通过覆盖默认的上传行为，可以自定义自己的上传实现',
  UploadApiDecOnChange: '上传文件改变时的状态调',
  UploadApiDecListType: '上传列表的内建样式，支持两种基本样式 text or picture',
  UploadApiDecOnRemove: '点击移除文件时的回调',
  UploadApiDecDisabled: '是否禁用',
  UploadApiDecWithCredentials: '上传请求时是否携带 cookie',
  SelectDesc: '当选项过多时，使用下拉菜单展示并选择内容。',
  DisabledOption: '有禁用选项',
  DisabledSelect: "禁用",
  DisabledSelectDesc: '禁用选择器',
  Clearable: '可清空单选',
  ClearableDesc: '鼠标悬浮在输入框，右侧小三角会变成关闭icon',
  BasicMultiple: '基础多选',
  BasicMultipleDesc: '多选选择器，用 Tag 展示已选项',
  CreateTag: '创建标签',
  Grouping: '分组展示',
  RemoteSearch: '远程搜索',
  RemoteSearchDesc: '从服务器搜索数据，输入关键字进行查找，支持延迟',
  IsRemoteDesc: '是否为远程搜索	',
  RemoteMethodDesc: '远程搜索方法',
  IsGroupDesc: '是否分组显示,默认为false；若true，data的数据结构请参照上文的example',
  IsDisabledDesc: '选择器不可用',
  IsMultipleDesc: '是否多选',
  AllowCreateDesc: '是否允许用户创建新标签，需配合 is-multiple 使用',
  OnItemSelected: '选中选项的触发回调',
  LoadingDesc: 'loading效果',
  TargetDesc: '支持传入string选择器（querySelector), dom对象，以及angularElement对象（jqlite）',
  LoadingText: '指定显示loading 的信息',
  CalendarBeforeRender: '在view改变之前，会调用此函数',
  OnSetTime: '选择完step之后，触发的函数。',
  SeeBelow: '参照下表',
  StartView: '展开日历时，出现的第一个view的类型',
  MinView: '最后一个选择view的类型',
  MinuteStep: '分钟视图的间隔，默认是1（展示60个）',
  ModelType: '指定日期展示类型，支持moment等常见的格式.',
  Feature1: '通过命令行快速创建项目，创建组件',
  Feature2: '提供大量开箱即用的PC端开发常用组件',
  Feature3: '3分钟内开发完成一个与rest API对接的管理后台页面',
  Feature4: '模块化管理并按需加载，ES6语法上手',
  Feature5: '使用ES6 + gulp + webpack做项目管理',
  FeatureDesc: 'FancyUI是万达网络科技集团飞凡前端团队开源的一套AngularJs(1.5.X)的组件库，适合构建后台管理系统，主要有以下特性：',
  MessageService: '全局提示',
  MessageDesc: '全局展示操作反馈信息。',
  MessageApiDecContent: '提示内容',
  MessageApiDecduration: '自动关闭的延时，单位毫秒',
  navMenuDesc: '根据树形数据渲染侧边菜单，多用于动态数据渲染；根据location.href自动打开并高亮对应菜单。',
  NavMenuApiDecMenuData: '数据源',
  NavMenuApiDecConfig: '指定id，children，parent字段',
  NavMenuApiDecOnSelect: '点击menu时的回调',
  NavMenuApiDecChildrenAttr: '指定子节点字段',
  NavMenuApiDecIdAttr: '指定节点id字段',
  NavMenuApiDecParentAttr: '指定节点父id字段',
  NavMenuApiDecHrefAttr: '指定节点链接字段',
  NavMenuApiDecTextAttr: '指定节点文字字段',
  NavMenuApiDecIconAttr: '指定节点图标字段',
  matchCurrentUrl: '当前节点和location.href的匹配情况，匹配返回true，否则返回false',
})
